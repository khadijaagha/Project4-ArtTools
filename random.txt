
    const products = artProducts.map(product => 
        <ArtToolProduct 
        key={product._id}
        artProduct={product}
        />)


product._id

<input type="file" id="file-input" accept="image/x-png,image/gif,image/jpeg" onChange={(e) => setImage(e.target.value)}

            <input type="file" id="file-input" accept="image/*" onChange={(e) => setImage(e.target.value)}


    <AllTools products={artProducts} />



      const handleDelete = async () => {
        // Find the index of the product to delete
        const productIndex = artProducts.findIndex(product => product.title === toolName);
        if (productIndex === -1) return;
    
        const shouldDelete = window.confirm('Are you sure you want to delete this product?');
        if (shouldDelete) {
          try {
            // Make a DELETE request to the API
            const deletedProduct = artProducts[productIndex];
            await productsAPI.deleteProduct(deletedProduct.id);
            
            // Update the state to remove the deleted product
            const updatedProducts = [...artProducts];
            updatedProducts.splice(productIndex, 1);
            setProducts(updatedProducts);
          } catch (error) {
            console.error('Error deleting product:', error);
          }
        }
      };
    


    async function allReviews(req, res) {
    const reviews = await Product.review.find().sort({createdAt: -1}).populate('user')
    res.json(reviews);
}




        <ul >
          {reviews && reviews.map((review, idx) => (
            <div className='reviews'>
              <li key={idx}>
                <p>{review.content}</p>
                <p>{review.rating}</p>
                <p className='username'>{user.name}</p>
              </li>
            </div>

          ))}

        </ul >